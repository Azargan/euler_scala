package first

/**
 * Created by Aliaksei Vihuro on 07.08.15.
 */
/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 *      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 *
 */
object Problem2 {

  def getFibonacciLessThat(number: Int) : List[Long] = {

    def f(prev: Long, curr: Long, res: List[Long]) : List[Long] = {
      if (curr <= number) {
        f(curr, prev + curr, res.::(curr))
      } else {
        res
      }
    }

    f(1, 2, List(1))
  }

  def main(args: Array[String]) {
    println(getFibonacciLessThat(4000000).filter(x => x % 2 == 0).sum)
  }
}
/*
 * Solved[07/08/15]: 4613732
 */
